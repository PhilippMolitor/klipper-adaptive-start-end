[gcode_macro _KASE_PURGE]
gcode:
  {% set cfg = printer['gcode_macro _KASE_CONFIG'] %}
  
  ; Printer kinematics
  {% set is_delta = printer.configfile.settings.printer.kinematics == 'delta' %}

   ; Manual purge lines
  {% set purge_x_offset = cfg.purge_x_offset | default(0) | float %}
  {% set purge_y_padding = cfg.purge_y_padding | default(20) | float %}
  {% set purge_line_height = cfg.purge_line_height | default(0.3) | float %}
  {% set purge_line_width = cfg.purge_line_width | default(0.4) | float %}
  ; calculated wipe parameters
  {% set purge_y_min = purge_y_padding %}
  {% set purge_y_max = printer.toolhead.axis_maximum.y - purge_y_padding %}
  {% set purge_y_length = purge_y_max - purge_y_min %}
  ; TODO: calculate extrusion length correctly from purge_line_height, purge_line_width and purge_y_length
  ; https://3dprinting.stackexchange.com/questions/6289/how-is-the-e-argument-calculated-for-a-given-g1-command

  {% if is_delta %}
    ; TODO: purge on a round delta bed
  {% else %}
    {% if printer['gcode_macro LINE_PURGE'] is defined %}
      ; KAMP line purge
      LINE_PURGE
    {% elif printer['gcode_macro VORON_PURGE'] is defined %}
      ; KAMP voron purge
      VORON_PURGE
    {% else %}
      ; Manual purge lines on the left
      G1 Z2.0 F3000 ; Z hop to 2mm

      ; TODO: calculate extrusion length correctly from purge_line_height, purge_line_width and purge_y_length
      G1 X{purge_x_offset} Y{purge_y_min} Z{purge_line_z} F5000.0 ; first line start
      G1 X{purge_x_offset} Y{purge_y_max} Z{purge_line_z} F1500.0 E15 ; first line end
      G1 X{purge_x_offset + 0.3} Y{purge_y_max} Z{purge_line_height} F5000.0 ; second line start (x offset)
      G1 X{purge_x_offset + 0.3} Y{purge_y_min} Z{purge_line_height} F1500.0 E30 ; second line end
      
      G1 Z3.0 E29.8 F3000 ; big z hop + retract
      G1 X{purge_x_offset} Y{purge_y_min} Z0.3 F5000.0 ; move away a bit and back down to the build plate

      G92 E0 ; reset extruder
    {% endif %}
  {% endif %}