[include KASE_park.cfg]
[include KASE_purge.cfg]

[gcode_macro _KASE_START_STATUS]
gcode:
  SET_DISPLAY_TEXT MSG="start: {params.MSG}"
  RESPOND PREFIX="start: " MSG="{params.MSG}"

[gcode_macro PRINT_START]
gcode:
  ;
  ; Temperature parameters
  ;
  {% set temp_bed = params.TEMP_BED | default(60) | float %}
  {% set temp_extruder = params.TEMP_EXTRUDER | default(200) | float %}
  {% set temp_chamber = params.TEMP_CHAMBER | default(0) | float %}
  
  ;
  ; Printer abilities
  ;
  {% set is_delta = printer.configfile.settings.printer.kinematics == 'delta' %}
  {% set can_zta = printer.z_tilt is defined %}
  {% set can_qgl = printer.quad_gantry_level is defined %}
  {% set can_bml = printer.bed_mesh is defined %}

  ; Macro support detection
  {% set macro_klicky = printer['gcode_macro _Probe_Variables'] is defined %}
  {% set macro_voron_sb = printer['gcode_macro _SB_VARS'] is defined %}
  
  ;
  ; Internal variables
  ;
  {% set cfg = printer['gcode_macro _KASE_CONFIG'] %}

  ; Load Bed Mesh if available
  {% if can_bml %}
    {% set bml_profile = cfg.start_bed_mesh_profile | default('default') %}

    {% if printer.configfile.settings["bed_mesh " + bml_profile] is defined %}
      {% if cfg.start_bed_mesh_always_load or printer.bed_mesh.profile_name is not defined %}
        BED_MESH_PROFILE LOAD={bml_profile}
        {% set bml_loaded = True %}
        _KASE_START_STATUS MSG="loaded bed mesh profile: {bml_profile}"
      {% endif %}
    {% else %}
      _KASE_START_STATUS MSG="bed mesh profile {bml_profile} not found"
    {% endif%}
  {% endif %}

  {% if cfg.skew_profile is defined %}
    SKEW_PROFILE LOAD={ cfg.skew_profile }
  {% endif %}

  ; adjustment sequence tasks
  {% set do_home_xyz = cfg.start_always_home_xyz or 'xyz' not in printer.toolhead.homed_axes %}
  
  {% set do_home_zta = (cfg.start_always_z_tilt_adjust or not printer.z_tilt.applied) if can_zta else False %}
  {% set do_home_qgl = (cfg.start_always_quad_gantry_level or not printer.quad_gantry_level.applied) if can_qgl else False %}
  {% set do_home_bml = (cfg.start_always_bed_mesh_level or bml_loaded is not defined or cfg.start_bed_mesh_adaptive) if can_bml else False %}
  
  {% set do_any_leveling = do_home_zta or do_home_qgl or do_home_bml %}

  {% set do_chamber_heating = cfg.sensor_chamber is defined and temp_chamber > 0 %}
  {% if do_home_xyz or do_any_leveling %}
    {% set temp_extruder_homing_max = temp_extruder if cfg.start_homing_max_extruder_temperature is not defined or not cfg.start_homing_max_extruder_temperature or temp_extruder <= cfg.start_homing_max_extruder_temperature else cfg.start_homing_max_extruder_temperature %}
  {% else %}
    {% set temp_extruder_homing_max = temp_extruder %}
  {% endif %}

  {% if macro_voron_sb %}
    STATUS_BUSY
  {% endif %}

  {% if cfg.start_custom_gcode_before is defined %}
    {cfg.start_custom_gcode_before}
  {% endif %}

  ;
  ; Temperatures
  ;
  _KASE_START_STATUS MSG="pre-heating extruder = {temp_extruder} C, bed = {temp_bed} C"

  M104 S{temp_extruder_homing_max} T0 ; extruder preheating
  M140 S{temp_bed} ; bed heating

  {% if macro_voron_sb %}
    STATUS_HEATING
  {% endif %}

  ;
  ; Setup & Homing
  ;
  {% if do_home_xyz %}
    _KASE_START_STATUS MSG="homing XYZ"

    {% if macro_voron_sb %}
      STATUS_HOMING
    {% endif %}

    G28 X Y
  
    ; Klicky support
    {% if macro_klicky %}
      ATTACH_PROBE
    {% endif %}

    {% if cfg.start_custom_gcode_before_leveling is defined %}
      {cfg.start_custom_gcode_before_leveling}
    {% endif %}

    G28 Z

    {% if cfg.start_custom_gcode_after_leveling is defined %}
      {cfg.start_custom_gcode_after_leveling}
    {% endif %}

    ; Klicky support
    {% if macro_klicky %}
      DOCK_PROBE
    {% endif %}
  {% endif %}
  G92 E0 ; Reset extruder
  G90 ; Absolute positioning


  ;
  ; Chamber pre-heat and probing temperature
  ;
  {% if macro_voron_sb %}
    STATUS_HEATING
  {% endif %}

  _KASE_START_STATUS MSG="waiting for bed temperature = {temp_bed} C"

  ; wait for bed temp
  M190 S{temp_bed} 
  ; move extruder close to the bed
  _KASE_PARK 

  {% if do_chamber_heating %}
    ; Wait for chamber temp - we assume heatsoak is done in the meantime

    _KASE_START_STATUS MSG="waiting for chamber temperature = {temp_chamber} C"

    ; part cooling fan
    M106 S255 
    ; wait for the chamber to reach the target temperature
    TEMPERATURE_WAIT SENSOR="{cfg.sensor_chamber}" MINIMUM={target_chamber}
    ; disable part cooler fan again
    M107
  
    ; beep so we know the wait is over
    { cfg.gcode_beep }
  {% elif temp_bed >= cfg.start_heatsoak_min_temp | default(90) | int %}
    ; wait for bed heat soaking

    ; TODO: calculate soak time based on bed size and target bed temperature
    {% set soak_time = 300 %}

    _KASE_START_STATUS MSG="waiting {(soak_time / 60) | round(1)} min for bed heat soaking"

    G4 P{soak_time * 1000} ; wait 5 minutes

    ; beep so we know the wait is over
    { cfg.gcode_beep }
  {% elif cfg.start_heatsoak_minimum_seconds is defined %}
    G4 P{cfg.start_heatsoak_minimum_seconds * 1000}

    ; beep so we know the wait is over
    { cfg.gcode_beep }
  {% endif %}
  
  ; wait for extruder homing temp
  M109 S{temp_extruder_homing_max} T0


  ;
  ; Adjustments
  ;

  {% if do_any_leveling %}
    ; Klicky support
    {% if macro_klicky %}
      ATTACH_PROBE
    {% endif %}

    {% if cfg.start_custom_gcode_before_leveling is defined %}
      {cfg.start_custom_gcode_before_leveling}
    {% endif %}

    ; Z Tilt Adjustment
    {% if do_home_zta %}
      _KASE_START_STATUS MSG="adjusting Z tilt"

      {% if macro_voron_sb %}
        STATUS_CALIBRATING_Z
      {% endif %}

      Z_TILT_ADJUST
      G28 Z
      {% set did_home_z_again = True %}
    {% endif %}

    ; Quad Gantry Level
    {% if do_home_qgl %}
      _KASE_START_STATUS MSG="leveling quad gantry"

      {% if macro_voron_sb %}
        STATUS_LEVELING
      {% endif %}

      QUAD_GANTRY_LEVEL
      G28 Z
      {% set did_home_z_again = True %}
    {% endif %}

    ; Home Z again at temperature if it wasn't homed again after ZTA or QGL
    {% if did_home_z_again is not defined and not is_delta %}
      _KASE_START_STATUS MSG="homing Z at temperature"

      {% if macro_voron_sb %}
        STATUS_CALIBRATING_Z
      {% endif %}

      G28 Z
    {% endif %}

    ; Bed mesh leveling
    {% if do_home_bml %}
      _KASE_START_STATUS MSG="calibrating bed mesh"

      {% if macro_voron_sb %}
        STATUS_MESHING
      {% endif %}

      BED_MESH_CLEAR

      {% if cfg.start_bed_mesh_adaptive %}
        BED_MESH_CALIBRATE ADAPTIVE=1
      {% else %}
        BED_MESH_CALIBRATE PROFILE={bml_profile}
      {% endif %}

      G0 Z10 F6000 ; Z hop to 10mm
    {% endif %}

    {% if cfg.start_custom_gcode_after_leveling is defined %}
      {cfg.start_custom_gcode_after_leveling}
    {% endif %}
    
    ; Klicky support
    {% if macro_klicky %}
      DOCK_PROBE
    {% endif %}
  {% endif %}

  ; Final extruder temperature after all possible nozzle probing is done
  {% if temp_extruder != temp_extruder_homing_max %}
    _KASE_START_STATUS MSG="waiting for final extruder temperature = {temp_extruder} C"

    _KASE_PARK

    {% if macro_voron_sb %}
      STATUS_HEATING
    {% endif %}

    M109 S{temp_extruder} T0 ; extruder final heating
  {% endif %}

  ; Beep twice so we know the print will start now
  { cfg.gcode_beep }
  G4 P300
  { cfg.gcode_beep }

  {% if macro_voron_sb %}
    STATUS_PRINTING
  {% endif %}

  ; move delta printers to low Z-height to avoid move out of range errors
  {% if is_delta %}
    _KASE_PARK Z=1.0
  {% endif %}

  ;
  ; Purging
  ;
  {% if not cfg.start_purging_disable %}
    _KASE_START_STATUS MSG="purging"
    _KASE_PURGE
  {% endif %}

  {% if cfg.start_custom_gcode_after is defined %}
    {cfg.start_custom_gcode_after}
  {% endif %}

  ;
  ; clear display text
  ;
  SET_DISPLAY_TEXT
